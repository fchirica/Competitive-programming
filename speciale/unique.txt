#include <stdio.h>
 
int x[100100], sol[100100], st[100100], pos[100100], left[100100];
int TT[100100];
 
void chmax(int &A, int B)
{
    if (B > A)
        A = B;
}
 
int search(int root)
{
    int nod = root;
     
    while (root != TT[root])
        root = TT[root];
         
    while (nod != root)
    {
        int tmp = TT[nod];
        TT[nod] = root;
        nod = tmp;
    }
     
    return root;
}
 
void solve(int N)
{
    int i;
     
    x[++ N] = 1 << 30;
    for (i = 1; i <= N; i ++)
    {
        sol[i] = pos[i] = left[i] = 0;
        TT[i] = i; 
    }
     
    int best = 0;
     
    for (i = 1; i <= N; i ++)
    {
        int unq = 0;
         
        while (st[0] > 0 && x[st[st[0]]] <= x[i])
        {
            unq += sol[st[st[0]]];
            if (unq == x[st[st[0]]])
                chmax(best, i - left[st[st[0]]]);
                 
            TT[st[st[0]]] = i;
            left[i] = left[st[st[0]]];
            st[0] --;
        }
         
        sol[i] = unq + 1;
        st[++ st[0]] = i;
        if (pos[x[i]])
        {
            int dad = search(pos[x[i]]);
            sol[dad] --;
        }
        pos[x[i]] = i;
        if (left[i] == 0)
            left[i] = i;
    }
     
    printf("%d\n", best);
}
 
int main()
{
    int i, T, N;
     
    freopen("unique.in", "r", stdin);
    freopen("unique.out", "w", stdout);
     
    scanf("%d", &T);
    while (T --)
    {
        scanf("%d", &N);
        for (i = 1; i <= N; i ++)
            scanf("%d", &x[i]);
         
        solve(N);
    }
     
    return 0;
}